[tool.poetry]
name = "fast-car-api"
version = "0.1.0"
description = ""
authors = ["HiagoSilva <hiagosilvaanjos7@gmail.com>"]
readme = "README.md"
packages = [{include = "fast_car_api", from = "src"}]

[tool.poetry.dependencies]
python = "^3.12"
fastapi = {extras = ["standard"], version = "^0.117.1"}
uvicorn = "^0.37.0"
sqlalchemy = "^2.0.43"
alembic = "^1.16.5"

[tool.poetry.group.dev.dependencies]
ruff = "^0.13.2"
taskipy = "^1.14.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
line-length = 79
target-version = "py312"
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "alembic/versions",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings  
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]

ignore = [
    "E501", # line too long (handled by formatter)
]

[tool.ruff.lint.isort]
known-first-party = ["fast_car_api"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
line-ending = "auto"

[tool.taskipy.tasks]
lint = "ruff check src"
format = "ruff format src"
check = "ruff check src && ruff format --check src"
dev = "uvicorn src.fast_car_api.main:app --reload"
start = "uvicorn src.fast_car_api.main:app"
migrate = "alembic upgrade head"
makemigration = "alembic revision --autogenerate"
migration-history = "alembic history"
test = "pytest"
test-cov = "pytest --cov=fast_car_api"
clean = "find . -type f -name '*.pyc' -delete && find . -type d -name '__pycache__' -delete"
ci = "task check && task test"